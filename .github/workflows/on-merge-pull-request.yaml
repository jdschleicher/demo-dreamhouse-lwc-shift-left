name: on-merge-pull-request

on:
  pull_request: 
    types: [closed]
    branches:
      - 'release*'

env:
  DEVHUB_ALIAS:                     "devhub"
  UAT_ORG_ALIAS:                    "uat"  
  PROD_ORG_ALIAS:                   "prod"

jobs:
 
  quick-package-version-build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    outputs:
      default_package_name: ${{ steps.get_default_package.outputs.default_package_name }}
      default_package_directory: ${{ steps.get_default_package.outputs.default_package_directory }}
      quick_build_package_version_subscriber_id: ${{ steps.quick_version_build.outputs.quick_build_package_version_subscriber_id}}
  
    steps:

      - name: NODE INSTALL OVERWRITE FOR ISSUE https://github.com/forcedotcom/cli/issues/2125
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.2'

      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: GET DEFAULT PACKAGE INFO
        shell: pwsh
        id: get_default_package
        run: . .\ci_system\sfdx\get_default_package_info.ps1 

      - name: INSTALL SFDX 
        run: |
          npm install sfdx-cli --global
          sfdx --version

      - name: AUTHENTICATE DEVHUB AUTH URL
        env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:DEVHUB_AUTH_URL -org_alias "$env:DEVHUB_ALIAS"

      - name: QUICK PACKAGE VERSION BUILD
        id: quick_version_build  
        shell: pwsh
        run: |
          $default_package_name = "${{ steps.get_default_package.outputs.default_package_name }}"
          $devhub_alias = $env:DEVHUB_ALIAS
          . .\ci_system\sfdx\quick_package_version_build.ps1 -package_name "$default_package_name" -devhub_alias "$devhub_alias" 

  uat-install:
    runs-on: ubuntu-latest
    environment: uat

    needs: [ 
      quick-package-version-build
    ]

    steps:

      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: INSTALL SFDX 
        run: |
          npm install sfdx-cli --global
          sfdx --version

      - name: AUTHENTICATE UAT AUTH URL
        env:
          AUTH_URL: ${{ secrets.AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:AUTH_URL -org_alias "$env:UAT_ORG_ALIAS"

      - name: UAT INSTALL
        shell: pwsh
        run: |
          $subscriber_package_version_id = "${{ needs.quick-package-version-build.outputs.quick_build_package_version_subscriber_id }}"
          Write-Host "uat subscriber_package_version_id : $subscriber_package_version_id"
          $uat_org_alias = "$env:UAT_ORG_ALIAS"
          Write-Host "uat org alias : $uat_org_alias"
          . ./ci_system/sfdx/install_package_version_to_org.ps1 -org_to_install_alias "$env:UAT_ORG_ALIAS" -subscriber_package_version_id $subscriber_package_version_id

  #### SPLIT JOB PIPELINES ####

  full-validate-package-version-build:
    ### BELOW IF CONDITIONAL ENSURES PR IS MERGED AND CLOSED BEFORE MERGING
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    outputs:
      default_package_name: ${{ steps.get_default_package.outputs.default_package_name }}
      default_package_directory: ${{ steps.get_default_package.outputs.default_package_directory }}
      latest_package_version: ${{ steps.get_default_package.outputs.latest_package_version }}
      full_build_package_version_subscriber_id: ${{ steps.full_validate_package_version_build.outputs.full_build_package_version_subscriber_id}}
  
    steps:

      - name: NODE INSTALL OVERWRITE FOR ISSUE https://github.com/forcedotcom/cli/issues/2125
        uses: actions/setup-node@v3
        with:
          node-version: '18.14.2'
          
      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: GET DEFAULT PACKAGE INFO
        shell: pwsh
        id: get_default_package
        run: . .\ci_system\sfdx\get_default_package_info.ps1 

      - name: INSTALL SFDX 
        run: |
          npm install sfdx-cli --global
          sfdx --version

      - name: AUTHENTICATE DEVHUB AUTH URL
        env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:DEVHUB_AUTH_URL -org_alias "$env:DEVHUB_ALIAS"

      - name: FULL VALIDATE PACKAGE VERSION BUILD
        id: full_validate_package_version_build  
        shell: pwsh
        run: |
          $default_package_name = "${{ steps.get_default_package.outputs.default_package_name }}"
          $devhub_alias = $env:DEVHUB_ALIAS
          . .\ci_system\sfdx\full_validation_package_version_build.ps1 -package_name "$default_package_name" -devhub_alias "$devhub_alias" 

  create-github-release:
    runs-on: ubuntu-latest

    needs: [
      full-validate-package-version-build
    ]

    steps:

      - name: CREATE GITHUB TAG 
        id: tag_version
        env:           
            VALIDATED_SUBSCRIBER_ID:  ${{ needs.full-validate-package-version-build.outputs.full_build_package_version_subscriber_id }}
            LATEST_PACKAGE_VERSION: ${{ needs.full-validate-package-version-build.outputs.latest_package_version }}
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag : "${{ needs.full-validate-package-version-build.outputs.latest_package_version }}_${{ needs.full-validate-package-version-build.outputs.full_build_package_version_subscriber_id }}"
    
      - name: CREATE GITHUB RELEASE
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Build ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          bodyFile: "body.md"
  
  production-install:
    runs-on: ubuntu-latest
    environment: prod

    needs: [ 
      full-validate-package-version-build,
      create-github-release
    ]

    steps:
      - name: CHECKOUT CURRENT REPOSITORY IN VIRTUAL MACHINE
        uses: actions/checkout@v3

      - name: INSTALL SFDX 
        run: |
          npm install sfdx-cli --global
          sfdx --version

      - name: AUTHENTICATE DEVHUB AUTH URL
        env:
          DEVHUB_AUTH_URL: ${{ secrets.DEVHUB_AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:DEVHUB_AUTH_URL -org_alias "$env:DEVHUB_ALIAS"
  
      - name: AUTHENTICATE PROD AUTH URL
        env:
          AUTH_URL: ${{ secrets.AUTH_URL }}
        shell: pwsh
        run: . ./ci_system/sfdx/auth_url.ps1 -auth_url $env:AUTH_URL -org_alias "$env:PROD_ORG_ALIAS"

      - name: PROMOTE PACKAGE VERSION FOR PRODUCTION INSTALL
        shell: pwsh
        run: |
          $subscriber_package_version_id = "${{ needs.full-validate-package-version-build.outputs.full_build_package_version_subscriber_id }}"
          $package_promote_result_json = $(sfdx force:package:version:promote --targetdevhubusername "$env:DEVHUB_ALIAS" --package $subscriber_package_version_id  --noprompt --json)
          Write-Host "Here's the results of the SFDX CLI Promote Command: $package_promote_result_json"
          $package_promote_result = $package_promote_result_json | ConvertFrom-Json
          $package_promote_result.status

      - name: PRODUCTION INSTALL
        shell: pwsh
        run: |
          $subscriber_package_version_id = "${{ needs.full-validate-package-version-build.outputs.full_build_package_version_subscriber_id }}"
          Write-Host "prod subscriber_package_version_id : $subscriber_package_version_id"
          . ./ci_system/sfdx/install_package_version_to_org.ps1 -org_to_install_alias "$env:PROD_ORG_ALIAS" -subscriber_package_version_id $subscriber_package_version_id
